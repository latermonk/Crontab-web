{"version":3,"sources":["core/gateways/index.ts","ui/components/Helper/index.tsx","ui/components/Input/index.tsx","ui/components/Navbar/index.tsx","ui/screens/About/index.tsx","ui/screens/Home/index.tsx","core/adapters/redux/cronDescription/actions.ts","core/useCases/GetHumanReadableDescription.ts","core/adapters/redux/cronDescription/sagas.ts","core/adapters/redux/cronDescription/reducers.ts","ui/containers/Home.tsx","utils/validations.ts","ui/containers/Helper.tsx","ui/App.js","serviceWorker.js","core/framework/redux/sagas.ts","core/framework/redux/index.ts","core/framework/redux/reducers.ts","index.js","core/gateways/CronHumanDescription.ts"],"names":["_CronHumanDescription__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","Wrapper","styled","div","_templateObject","HelpTable","table","_templateObject2","HelperText","_templateObject3","Helper","_ref","cronExpressions","helpers","react","map","helper","index","key","row","expression","schedule","InputElement","input","Input_templateObject","InputWrapper","Input_templateObject2","ErrorWrapper","Input_templateObject3","ErrorText","span","_templateObject4","Input","label","type","_ref$meta","meta","active","error","rest","Object","objectWithoutProperties","assign","placeholder","ContributeButton","a","Navbar_templateObject","Nav","nav","Navbar_templateObject2","Navbar","react_default","createElement","target","rel","href","About","InnerContainer","section","Home_templateObject","ValuePropContainer","header","Home_templateObject2","HumanTextWrapper","Home_templateObject3","Home_templateObject4","Home","_this$props","this","props","getHumanReadableDescription","initialValues","cronExpression","_this$props2","humanExpression","title","Home_Wrapper","Field","name","component","autoFocus","onChange","event","value","HelperContainer","Component","getCronDescriptionActionType","concat","GET_HUMAN_READABLE_DESCRIPTION","GET_HUMAN_READABLE_DESCRIPTION_SUCCESS","getHumanReadableDescriptionSuccess","payload","GetHumanReadableDescription","cronHumanExpressionGateway","classCallCheck","_cronHumanExpressionGateway","createClass","_execute","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","stop","_x","apply","arguments","CronExpressionSagas","executeGetHumanReadableDescriptionInteractor","takeEvery","_marked","action","interactor","_context2","CronHumanDescription","call","sent","put","t0","console","log","_marked2","CronDescriptionReducers","combineReducers","state","length","undefined","DecoratedHomeForm","reduxForm","form","destroyOnUnmount","validate","values","HomeContainer","connect","dispatch","Container","App_templateObject","App","BrowserRouter","components_Navbar","Route","exact","path","Boolean","window","location","hostname","match","watch","all","fork","sagas_marked","sagaMiddleware","createSagaMiddleware","history","createBrowserHistory","store","createStore","formReducer","router","connectRouter","reducers","composeWithDevTools","compose","applyMiddleware","routerMiddleware","run","sagas","configureStore","ReactDOM","render","es","esm","ui_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","_Users_wei_GitHub_crontab_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_wei_GitHub_crontab_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","cronstrue","toString"],"mappings":"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","file":"static/js/main.68644c94.chunk.js","sourcesContent":["export * from \"./CronHumanDescription\";\nexport * from \"./CronHumanDescriptionGateway\";\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: start;\n  flex-direction: column;\n  background: #fff;\n  border: 1px solid #e9e4f7;\n  border-radius: 4px;\n  box-shadow: 0px 0px 10px rgba(48, 71, 89, 0.05);\n  margin: 0 0 1rem;\n  -webkit-transition: all 0.2s ease-out;\n  transition: all 0.2s ease-out;\n  padding: 40px;\n`;\n\nconst HelpTable = styled.table`\n  border: 1px solid #e9e4f7;\n  border-collapse: collapse;\n  border-spacing: 0;\n  font-size: 12px;\n  box-shadow: 0px 0px 10px rgba(48, 71, 89, 0.05);\n\n  thead th {\n    background-color: #f3ebff;\n    border: 1px solid #dcc5ff;\n    color: #382b5f;\n    padding: 10px;\n  }\n\n  tbody td {\n    border: 1px solid #e9e4f7;\n    color: #333;\n    padding: 10px;\n    text-shadow: 1px 1px 1px #fff;\n    text-align: center;\n  }\n`;\n\nconst HelperText = styled.div`\n  color: #3d4852;\n  padding-bottom: 10px;\n  padding-top: 10px;\n`;\n\ninterface CronExpression {\n  expression: string;\n  schedule: string;\n}\n\nconst Helper = ({\n  cronExpressions,\n  helpers\n}: {\n  cronExpressions: Array<CronExpression>;\n  helpers: Array<string>;\n}) => (\n  <Wrapper>\n    <HelperText>\n      The cron expression is made of five fields. Each field can have the\n      following values.\n    </HelperText>\n    <HelpTable>\n      <thead>\n        <tr>\n          {helpers.map((helper: string, index: number) => (\n            <th key={index}>*</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          {helpers.map((helper: string, index: number) => (\n            <td key={index}>{helper}</td>\n          ))}\n        </tr>\n      </tbody>\n    </HelpTable>\n    <br />\n    <HelperText>Here are some example for you.</HelperText>\n    <HelpTable>\n      <thead>\n        <tr>\n          <th>Cron expression</th>\n          <th>Schedule</th>\n        </tr>\n      </thead>\n      <tbody>\n        {cronExpressions.map((row: CronExpression, index: number) => (\n          <tr key={index}>\n            <td>{row.expression}</td>\n            <td>{row.schedule}</td>\n          </tr>\n        ))}\n      </tbody>\n    </HelpTable>\n  </Wrapper>\n);\n\nexport default Helper;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst InputElement = styled.input`\n  padding: 0.5em;\n  color: white;\n  border-radius: 3px;\n  text-align: center;\n  font-size: 130%;\n  background-color: #382b5f;\n  border: none;\n`;\n\nconst InputWrapper = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n`;\n\nconst ErrorWrapper = styled.div`\n  margin-top: 0.25rem;\n`;\n\nconst ErrorText = styled.span`\n  color: #ff5d63;\n  font-size: 0.75rem;\n`;\n\nconst Input = ({\n  input,\n  label,\n  type,\n  meta: { active, error },\n  ...rest\n}: any) => (\n  <InputWrapper>\n    <InputElement\n      error\n      active\n      {...input}\n      placeholder={label}\n      type={type}\n      {...rest}\n    />\n    <ErrorWrapper>\n      {active && error && <ErrorText>{error}</ErrorText>}\n    </ErrorWrapper>\n  </InputWrapper>\n);\n\nexport default Input;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ContributeButton = styled.a`\n  text-decoration: none;\n  border-radius: 3px;\n  background-color: #382b5f;\n  color: white;\n  padding: 10px 20px;\n  cursor: pointer;\n`;\n\nconst Nav = styled.nav`\n  color: white;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  justify-content: flex-end;\n\n  ul {\n    list-style: none;\n    display: flex;\n    margin-right: 30px;\n  }\n  a {\n    text-decoration: none;\n    padding: 10px;\n    display: inline-block;\n    font-weight: 500;\n    font-size: 16px;\n  }\n`;\n\nconst Navbar = () => (\n  <Nav>\n    <ul>\n      <li>\n        <ContributeButton\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://github.com/cronhub/crontab\"\n        >\n          Contribute\n        </ContributeButton>\n      </li>\n      <li></li>\n    </ul>\n  </Nav>\n);\n\nexport default Navbar;\n","import React from \"react\";\n\nconst About = () => (\n  <div>\n    <h2>About</h2>\n  </div>\n);\n\nexport default About;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Field, InjectedFormProps } from \"redux-form\";\nimport { Input } from \"../../components\";\nimport { HelperContainer } from \"../../containers\";\n\nexport const InnerContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 20px;\n  width: 100%;\n  max-width: 768px;\n`;\n\nconst ValuePropContainer = styled.header`\n  font-size: 25px;\n  font-weight: bold;\n  color: #5e4996;\n  margin-top: 20px;\n  margin-bottom: 40px;\n  text-align: center;\n\n  a {\n    font-family: \"Source Code Pro\", monospace;\n    color: #382a5f;\n  }\n`;\n\nconst HumanTextWrapper = styled.div`\n  display: flex;\n  padding: 10px;\n  margin-left: 20px;\n  font-weight: bold;\n  color: #382b5f;\n  font-size: 22px;\n  align-items: center;\n  font-family: monospace;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  align-items: baseline;\n  flex-direction: row;\n  background: #fff;\n  border: 1px solid #e9e4f7;\n  border-radius: 4px;\n  box-shadow: 0px 0px 10px rgba(48, 71, 89, 0.05);\n  margin: 0 0 1rem;\n  -webkit-transition: all 0.2s ease-out;\n  transition: all 0.2s ease-out;\n  padding: 40px;\n`;\n\ninterface HomeProps {\n  getHumanReadableDescription: Function;\n}\n\ninterface CronConfigFormValues {\n  cronExpression: string;\n}\n\nexport default class Home extends Component<\n  any & InjectedFormProps<CronConfigFormValues> & HomeProps\n> {\n  componentDidMount() {\n    const {\n      getHumanReadableDescription,\n      initialValues: { cronExpression }\n    } = this.props;\n    getHumanReadableDescription(cronExpression);\n  }\n\n  render() {\n    const { getHumanReadableDescription, humanExpression } = this.props;\n\n    return (\n      <InnerContainer>\n        <ValuePropContainer>\n          Cron expression generator by{\" \"}\n          <a href=\"https://cronhub.io?utm_source=crontab&utm_medium=referral&utm_campaign=sideproject-campaign\" title=\"crontab\">\n            Cronhub\n          </a>. Schedule and monitor jobs without any infra work.\n        </ValuePropContainer>\n        <Wrapper>\n          <Field\n            name=\"cronExpression\"\n            component={Input}\n            type=\"text\"\n            autoFocus\n            onChange={event =>\n              getHumanReadableDescription(event && event.target.value)\n            }\n          />\n          <HumanTextWrapper>\n            <span>{humanExpression}</span>\n          </HumanTextWrapper>\n        </Wrapper>\n\n        <HelperContainer />\n      </InnerContainer>\n    );\n  }\n}\n","const getCronDescriptionActionType = (type: string) =>\n  `GET_CRON_DESCRIPTION/${type}`;\n\nexport interface ActionType<T, P> {\n  readonly type: T;\n  readonly payload: P;\n}\n\nexport const GET_HUMAN_READABLE_DESCRIPTION = getCronDescriptionActionType(\n  \"GET_HUMAN_READABLE_DESCRIPTION\"\n);\n\nexport const GET_HUMAN_READABLE_DESCRIPTION_SUCCESS = getCronDescriptionActionType(\n  \"GET_HUMAN_READABLE_DESCRIPTION_SUCCESS\"\n);\n\nexport type GetHumanReadableDescriptionActionType = ActionType<\n  typeof GET_HUMAN_READABLE_DESCRIPTION,\n  string\n>;\n\nexport const getHumanReadableDescription = (schedule: string) => ({\n  type: GET_HUMAN_READABLE_DESCRIPTION,\n  payload: schedule\n});\n\nexport type GetHumanReadableDescriptionSuccessActionType = ActionType<\n  typeof GET_HUMAN_READABLE_DESCRIPTION_SUCCESS,\n  string\n>;\n\nexport const getHumanReadableDescriptionSuccess = (\n  humanExpression: string\n) => ({\n  type: GET_HUMAN_READABLE_DESCRIPTION_SUCCESS,\n  payload: humanExpression\n});\n","import { CronHumanDescriptionGateway } from \"../gateways\";\n\nexport class GetHumanReadableDescription {\n  private _cronHumanExpressionGateway: CronHumanDescriptionGateway;\n\n  constructor(cronHumanExpressionGateway: CronHumanDescriptionGateway) {\n    this._cronHumanExpressionGateway = cronHumanExpressionGateway;\n  }\n\n  public async execute(schedule: string) {\n    return this._cronHumanExpressionGateway.getHumanReadableDescription(\n      schedule\n    );\n  }\n}\n","import { takeEvery, put, call } from \"redux-saga/effects\";\n\nimport {\n  GET_HUMAN_READABLE_DESCRIPTION,\n  getHumanReadableDescriptionSuccess,\n  GetHumanReadableDescriptionActionType\n} from \"./actions\";\nimport { GetHumanReadableDescription } from \"../../../useCases\";\nimport { CronHumanDescription } from \"../../../gateways\";\n\nexport function* CronExpressionSagas() {\n  yield takeEvery(\n    GET_HUMAN_READABLE_DESCRIPTION,\n    executeGetHumanReadableDescriptionInteractor\n  );\n}\n\nfunction* executeGetHumanReadableDescriptionInteractor(\n  action: GetHumanReadableDescriptionActionType\n) {\n  try {\n    const { payload } = action;\n    const interactor = new GetHumanReadableDescription(\n      new CronHumanDescription()\n    );\n    const humanExpression = yield call([interactor, \"execute\"], payload);\n    yield put(getHumanReadableDescriptionSuccess(humanExpression));\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import { combineReducers } from \"redux\";\nimport {\n  GET_HUMAN_READABLE_DESCRIPTION_SUCCESS,\n  GetHumanReadableDescriptionSuccessActionType\n} from \"./actions\";\n\nconst humanExpression = (\n  state: string = \"\",\n  action: GetHumanReadableDescriptionSuccessActionType\n) => {\n  switch (action.type) {\n    case GET_HUMAN_READABLE_DESCRIPTION_SUCCESS:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport const CronDescriptionReducers = combineReducers({\n  humanExpression\n});\n","import { connect } from \"react-redux\";\nimport { reduxForm, focus } from \"redux-form\";\nimport { Dispatch } from \"redux\";\n\nimport { Home } from \"../screens\";\nimport { isRequired } from \"../../utils\";\n\nimport { getHumanReadableDescription } from \"../../core/adapters\";\n\ninterface State {\n  cronExpression: {\n    humanExpression: string;\n  };\n}\n\ninterface CronConfigFormValues {\n  cronExpression: string;\n}\n\nconst mapStateToProps = (state: State) => ({\n  humanExpression: state.cronExpression.humanExpression\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  getHumanReadableDescription: (schedule: string) =>\n    dispatch(getHumanReadableDescription(schedule)),\n});\n\nconst validate = (values: CronConfigFormValues) => ({\n  cronExpression: isRequired(values.cronExpression)\n});\n\nconst DecoratedHomeForm = reduxForm({\n  form: \"CronScheduleForm\",\n  destroyOnUnmount: false,\n  validate,\n  initialValues: {\n    cronExpression: \"*/5 * * * *\"\n  }\n})(Home);\n\nexport const HomeContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DecoratedHomeForm);\n","export const isRequired = (value: string) =>\n  value ? undefined : \"This field is required\";\n","import { connect } from \"react-redux\";\n\nimport { Helper } from \"../components\";\n\nconst mapStateToProps = () => ({\n  cronExpressions: [\n    {\n      expression: \"* * * * *\",\n      schedule: \"Every minute\"\n    },\n    {\n      expression: \"0 * * * *\",\n      schedule: \"Every hour\"\n    },\n    {\n      expression: \"0 0 * * *\t\",\n      schedule: \"Every day at 12:00 AM\"\n    },\n    {\n      expression: \"0 0 * * FRI\",\n      schedule: \"At 12:00 AM, only on Friday\"\n    },\n    {\n      expression: \"0 0 1 * *\",\n      schedule: \"At 12:00 AM, on day 1 of the month\"\n    }\n  ],\n  helpers: [\n    \"minute (0-59)\",\n    \"hour (0 - 23)\",\n    \"day of the month (1 - 31)\",\n    \"month (1 - 12)\",\n    \"day of the week (0 - 6)\"\n  ]\n});\n\nexport const HelperContainer = connect(\n  mapStateToProps,\n  null\n)(Helper);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport { Navbar } from \"./components\";\nimport { HomeContainer } from \"./containers\";\nimport { About } from \"./screens\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  max-width: 100%;\n`;\n\nfunction App() {\n  return (\n    <Router>\n      <Container>\n        <Navbar />\n        <Route exact path=\"/\" component={HomeContainer} />\n        <Route path=\"/about\" component={About} />\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { fork, all } from \"redux-saga/effects\";\n\nimport { CronExpressionSagas } from \"../../adapters\";\n\nexport default function* watch() {\n  yield all([fork(CronExpressionSagas)]);\n}\n","import { createBrowserHistory } from \"history\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport sagas from \"./sagas\";\nimport reducers from \"./reducers\";\n\nexport const configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n\n  const history = createBrowserHistory();\n  const store = createStore(\n    reducers(history),\n    composeWithDevTools(\n      compose(\n        applyMiddleware(sagaMiddleware),\n        applyMiddleware(routerMiddleware(history))\n      )\n    )\n  );\n\n  sagaMiddleware.run(sagas);\n\n  return { store, history };\n};\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport { reducer as formReducer } from \"redux-form\";\nimport { History } from \"history\";\n\nimport { CronDescriptionReducers } from \"../../adapters\";\n\nexport default (history: History) =>\n  combineReducers({\n    form: formReducer,\n    router: connectRouter(history),\n    cronExpression: CronDescriptionReducers\n  });\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./ui/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { configureStore } from \"./core\";\n\nconst { store, history } = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import cronstrue from \"cronstrue\";\n\nimport { CronHumanDescriptionGateway } from \"./CronHumanDescriptionGateway\";\n\nexport class CronHumanDescription implements CronHumanDescriptionGateway {\n  public getHumanReadableDescription(schedule: string) {\n    return cronstrue.toString(schedule);\n  }\n}\n"],"sourceRoot":""}